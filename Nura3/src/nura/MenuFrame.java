/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nura;

import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.ImageIcon;
//import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class MenuFrame extends javax.swing.JFrame
{

    private ArrayList<Integer> ar;  // список идентификаторов изображений в БД 
    // private ArrayList<Integer> rec;
    private int flag1, flag2, flag3, ir, id;
    private String sqli, sqls;

    /**
     * Creates new form MenuFrame
     */
    public MenuFrame() //конструктор окна MenuFrame ( для начального отоборажения "всех" рецептов)
    {
        flag1 = 0;
        flag2 = 1;
        flag3 = 2;
        //задаем иконку окна
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getClassLoader().getResource("img/иконка.png")));
        initComponents(); 
        this.setResizable(false); //запрещаем изменение размера окна
        ButRecept1.setText("");
        ButRecept2.setText("");
        ButRecept3.setText("");
        Menu_Back.setEnabled(false);
        sqls = "select rec_id from recept";

      
        fill1(flag1, sqls);
        fill2(flag2, sqls);
        fill3(flag3, sqls);

    }

    private void fill1(int index, String sqls)//заполнение 1 кнопки
    {
        ar = Nuranew.getIDS(sqls);// берем айдшники rec_id, так как они расположены по порядку 
        id = ar.get(index);
        BufferedImage bim = Nuranew.getBlob(id);
        ButRecept1.setIcon(new ImageIcon(bim));
        String text = Nuranew.getinfo(id);
        LabelRec1.setText(text);

    }

    private void fill2(int index, String sqls)//заолнение 2 кнопки
    {
        ar = Nuranew.getIDS(sqls);// берем айдшники rec_id, так как они расположены по порядку 
        id = ar.get(index);
        BufferedImage bim = Nuranew.getBlob(id);
        ButRecept2.setIcon(new ImageIcon(bim));
        String text = Nuranew.getinfo(id);
        LabelRec2.setText(text);

    }

    private void fill3(int index, String sqls)// заполнение 3 кнопки
    {
        ar = Nuranew.getIDS(sqls);// берем айдшники rec_id, так как они расположены по порядку 
        id = ar.get(index);
        BufferedImage bim = Nuranew.getBlob(id);
        ButRecept3.setIcon(new ImageIcon(bim));
        String text = Nuranew.getinfo(id);
        LabelRec3.setText(text);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ChooseType = new javax.swing.JComboBox<>();
        PaneChoose = new javax.swing.JPanel();
        PaneBackNext = new javax.swing.JPanel();
        Menu_Next = new javax.swing.JButton();
        Menu_Back = new javax.swing.JButton();
        Pane3Recepts = new javax.swing.JPanel();
        LabelRec1 = new javax.swing.JLabel();
        LabelRec2 = new javax.swing.JLabel();
        LabelRec3 = new javax.swing.JLabel();
        ButRecept1 = new javax.swing.JButton();
        ButRecept2 = new javax.swing.JButton();
        ButRecept3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ButMenuNew = new javax.swing.JButton();
        ButMenuExit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Есть у меня тут пара рецептов!");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(249, 246, 222));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ChooseType.setBackground(new java.awt.Color(249, 246, 222));
        ChooseType.setEditable(true);
        ChooseType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Все", "Завтрак", "Обед", "Ужин", "Первые блюда", "Вторые блюда", "Салаты и закуски", "Десерты и выпечка", "Восточная кухня", "Французская кухня", "Русская кухня", "Итальянская кухня", "Добавленное", "Избранное" }));
        ChooseType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseTypeActionPerformed(evt);
            }
        });
        jPanel1.add(ChooseType, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 220, 40));

        PaneChoose.setBackground(new java.awt.Color(249, 246, 222));
        PaneChoose.setOpaque(false);
        PaneChoose.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PaneBackNext.setBackground(new java.awt.Color(249, 246, 222));
        PaneBackNext.setOpaque(false);

        Menu_Next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/стрелка_вперед.png"))); // NOI18N
        Menu_Next.setBorderPainted(false);
        Menu_Next.setContentAreaFilled(false);
        Menu_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_NextActionPerformed(evt);
            }
        });

        Menu_Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/стрелка_назад.png"))); // NOI18N
        Menu_Back.setBorderPainted(false);
        Menu_Back.setContentAreaFilled(false);
        Menu_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PaneBackNextLayout = new javax.swing.GroupLayout(PaneBackNext);
        PaneBackNext.setLayout(PaneBackNextLayout);
        PaneBackNextLayout.setHorizontalGroup(
            PaneBackNextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaneBackNextLayout.createSequentialGroup()
                .addComponent(Menu_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Menu_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PaneBackNextLayout.setVerticalGroup(
            PaneBackNextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Menu_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        PaneChoose.add(PaneBackNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 233, 260, 70));

        Pane3Recepts.setBackground(new java.awt.Color(249, 246, 222));
        Pane3Recepts.setOpaque(false);
        Pane3Recepts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LabelRec1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LabelRec1.setForeground(new java.awt.Color(51, 0, 0));
        LabelRec1.setText("rec1");
        Pane3Recepts.add(LabelRec1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 220, 40));

        LabelRec2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LabelRec2.setForeground(new java.awt.Color(51, 0, 0));
        LabelRec2.setText("rec2");
        Pane3Recepts.add(LabelRec2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 220, 40));

        LabelRec3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LabelRec3.setForeground(new java.awt.Color(51, 0, 0));
        LabelRec3.setText("rec3");
        Pane3Recepts.add(LabelRec3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 220, 40));

        ButRecept1.setText("jButton23");
        ButRecept1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButRecept1ActionPerformed(evt);
            }
        });
        Pane3Recepts.add(ButRecept1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 220, 60));

        ButRecept2.setText("jButton23");
        ButRecept2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButRecept2ActionPerformed(evt);
            }
        });
        Pane3Recepts.add(ButRecept2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 220, 60));

        ButRecept3.setText("jButton23");
        ButRecept3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButRecept3ActionPerformed(evt);
            }
        });
        Pane3Recepts.add(ButRecept3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 220, 60));

        PaneChoose.add(Pane3Recepts, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -23, 260, 260));

        jPanel1.add(PaneChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, 310));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/меню.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 450));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/есть.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 240, 190));

        ButMenuNew.setBackground(new java.awt.Color(249, 246, 222));
        ButMenuNew.setForeground(new java.awt.Color(51, 30, 24));
        ButMenuNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/добавить_1.png"))); // NOI18N
        ButMenuNew.setBorderPainted(false);
        ButMenuNew.setContentAreaFilled(false);
        ButMenuNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ButMenuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButMenuNewActionPerformed(evt);
            }
        });
        jPanel1.add(ButMenuNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 270, 141, -1));

        ButMenuExit.setBackground(new java.awt.Color(253, 230, 182));
        ButMenuExit.setForeground(new java.awt.Color(51, 30, 24));
        ButMenuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Выход_1.png"))); // NOI18N
        ButMenuExit.setBorderPainted(false);
        ButMenuExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ButMenuExit.setOpaque(false);
        ButMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButMenuExitActionPerformed(evt);
            }
        });
        jPanel1.add(ButMenuExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, 130, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/кухня_размытая.jpg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ButMenuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButMenuNewActionPerformed
        new AddFrame(this).setVisible(true); //при нажатии на "добавить рецепт" создается новое окно, делаем его видимым
        this.setVisible(false); //а данное окно - невидимым 
    }//GEN-LAST:event_ButMenuNewActionPerformed

    private void ButMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButMenuExitActionPerformed
        new ExitFrame(this).setVisible(true); //при нажатии на "выход", создаем новое окно ExitFrame, делаем его видимым
        this.setVisible(false);//а данное окно - невидимым 
    }//GEN-LAST:event_ButMenuExitActionPerformed

    private void jButton98ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton98ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton98ActionPerformed

    private void jButton102ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton102ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton102ActionPerformed
    private String function(int ir)
    {
        System.out.println(ir);
        switch (ir)
        {
            case 0:
                sqli = "select rec_id from recept";
                break;
            case 1:
                sqli = "select pic_id from recept WHERE type_id='b'";
                break;
            case 2:
                sqli = "select pic_id from recept WHERE type_id='d'";
                break;
            case 3:
                sqli = "select pic_id from recept WHERE type_id='s'";
                break;
            case 4:
                sqli = "select pic_id from recept WHERE category_id='CAT2'";
                break;
            case 5:
                sqli = "select pic_id from recept WHERE category_id='CAT3'";
                break;
            case 6:
                sqli = "select pic_id from recept WHERE category_id='CAT4'";
                break;
            case 7:
                sqli = "select pic_id from recept WHERE category_id='CAT5'";
                break;
            case 8:
                sqli = "select pic_id from recept WHERE cui_id='e'";
                break;
            case 9:
                sqli = "select pic_id from recept WHERE cui_id='f'";
                break;
            case 10:
                sqli = "select pic_id from recept WHERE cui_id='r'";
                break;
            case 11:
                sqli = "select pic_id from recept WHERE cui_id='i'";
                break;

            case 12:
                sqli = "select add_id from added_recept";
                break;
            case 13:
                sqli = "select pic_id from recept where favourite_n=true";
                break;
            default:
                break;
        }
        return sqli;
    }
    private void ButRecept1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButRecept1ActionPerformed
        // при нажатии кнопки 1 переходим в ShowFrame, сохранняя при этом запрос и индекс 
        ir = ChooseType.getSelectedIndex();//для Box выбора 
        sqls = function(ir);
        ShowFrame main = new ShowFrame(flag1, sqls);
        main.setLocation(this.getLocation());
        this.setVisible(false);
        main.setVisible(true);
    }//GEN-LAST:event_ButRecept1ActionPerformed

    private void ButRecept2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButRecept2ActionPerformed
    {//GEN-HEADEREND:event_ButRecept2ActionPerformed
        // при нажатии кнопки 2 переходим в ShowFrame, сохранняя при этом запрос и индекс
        ir = ChooseType.getSelectedIndex();
        sqls = function(ir);
        ShowFrame main = new ShowFrame(flag2, sqls);
        main.setLocation(this.getLocation());
        this.setVisible(false);
        main.setVisible(true);

    }//GEN-LAST:event_ButRecept2ActionPerformed

    private void ButRecept3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButRecept3ActionPerformed
    {//GEN-HEADEREND:event_ButRecept3ActionPerformed
       // при нажатии кнопки 1 переходим в ShowFrame, сохранняя при этом запрос и индекс
        ir = ChooseType.getSelectedIndex();
        sqls = function(ir);
        ShowFrame main = new ShowFrame(flag3, sqls);
        main.setLocation(this.getLocation());
        this.setVisible(false);
        main.setVisible(true);
    }//GEN-LAST:event_ButRecept3ActionPerformed

    private void Menu_NextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Menu_NextActionPerformed
    {//GEN-HEADEREND:event_Menu_NextActionPerformed
       
// при нажатии кнопки "Далее" 
        ir = ChooseType.getSelectedIndex();
        switch (ir)
        {
            case 0://все
                Next(sqls);
                break;
            case 1://завтрак
                sqli = "select pic_id from recept WHERE type_id='b'";
                Next(sqli);
                break;
            case 2://обед
                sqli = "select pic_id from recept WHERE type_id='d'";
                Next(sqli);
                break;
            case 3:
                sqli = "select pic_id from recept WHERE type_id='s'";
                Next(sqli);
                break;
            case 4:
                sqli = "select pic_id from recept WHERE category_id='CAT2'";
                Next(sqli);
                break;
            case 5:
                sqli = "select pic_id from recept WHERE category_id='CAT3'";
                Next(sqli);
                break;
            case 6:
                sqli = "select pic_id from recept WHERE category_id='CAT1' AND category_id='CAT4'";
                Next(sqli);
                break;
            case 7:
                sqli = "select pic_id from recept WHERE category_id='CAT5'";
                Next(sqli);
                break;
            case 8:
                sqli = "select pic_id from recept WHERE cui_id='e'";
                Next(sqli);
                break;
            case 9:
                sqli = "select pic_id from recept WHERE cui_id='f'";
                Next(sqli);
                break;
            case 10:
                sqli = "select pic_id from recept WHERE cui_id='r'";
                Next(sqli);
                break;
            case 11:
                sqli = "select pic_id from recept WHERE cui_id='i'";
                Next(sqli);
                break;
            case 12://добавленное
                sqli = "select add_id from added_recept";
                Next_added(sqli);
                break;
            case 13: //избранное
                sqli = "select pic_id from recept where favourite_n=true";
                Next(sqli);

                break;

            default:
                break;
        }

    }//GEN-LAST:event_Menu_NextActionPerformed

    private void Menu_BackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Menu_BackActionPerformed
    {//GEN-HEADEREND:event_Menu_BackActionPerformed
//при нажатии кнопки "Назад"
        ir = ChooseType.getSelectedIndex();
        switch (ir)
        {
            case 0:
                Back(sqls);
                break;
            case 1:
                sqli = "select pic_id from recept WHERE type_id='b'";
                Back(sqli);
                break;
            case 2:
                sqli = "select pic_id from recept WHERE type_id='d'";
                Back(sqli);
                break;
            case 3:
                sqli = "select pic_id from recept WHERE type_id='s'";
                Back(sqli);
                break;
            case 4:
                sqli = "select pic_id from recept WHERE category_id='CAT2'";
                Back(sqli);
                break;
            case 5:
                sqli = "select pic_id from recept WHERE category_id='CAT3'";
                Back(sqli);
                break;
            case 6:
                sqli = "select pic_id from recept WHERE category_id='CAT1' AND category_id='CAT4'";
                Back(sqli);
                break;
            case 7:
                sqli = "select pic_id from recept WHERE category_id='CAT5'";
                Back(sqli);
                break;
            case 8:
                sqli = "select pic_id from recept WHERE cui_id='e'";
                Back(sqli);
                break;
            case 9:
                sqli = "select pic_id from recept WHERE cui_id='f'";
                Back(sqli);
                break;
            case 10:
                sqli = "select pic_id from recept WHERE cui_id='r'";
                Back(sqli);
                break;
            case 11:
                sqli = "select pic_id from recept WHERE cui_id='i'";
                Back(sqli);
                break;
            case 12:
                sqli = "select add_id from added_recept";
                Back_added(sqli);
                break;
            case 13:
                sqli = "select pic_id from recept where favourite_n=true";
                Back(sqli);
                break;
            default:
                break;
        }

    }//GEN-LAST:event_Menu_BackActionPerformed
   
    private void Next(String sqls)// Метод для "Далее"
    {   //обнуление всего
        Menu_Back.setEnabled(true);
        LabelRec1.setText("");
        ButRecept1.setIcon(null);
        LabelRec2.setText("");
        ButRecept2.setIcon(null);
        LabelRec3.setText("");
        ButRecept3.setIcon(null);
        System.out.println(flag1);
        System.out.println(ar.size());
        if (ar.size() == flag1 + 6)// это для блока кнопок вспомогательно

        {
            Menu_Next.setEnabled(false);
        } else
        {
            Menu_Next.setEnabled(true);
        }
        if (flag1 + 3 >= ar.size()) //если флаг выходит за границы массива
        {
            //эти итерации нужны для флага 
            flag1 = flag1 + 3;
            flag2 = flag2 + 3;
            flag3 = flag3 + 3;
            //JOptionPane.showMessageDialog(this, "рецепты кончились");
            Menu_Next.setEnabled(false);
        } else //если же не выходит
        {
            fill1(flag1 + 3, sqls);//заполняем кнопку
            flag1 = flag1 + 3;//делаем интерацию
            if (flag2 + 3 >= ar.size())
            {
                flag2 = flag2 + 3;
                flag3 = flag3 + 3;
                //JOptionPane.showMessageDialog(this, "рецепты кончились");
                Menu_Next.setEnabled(false);
            } else
            {
                fill2(flag2 + 3, sqls);//тоже самое для 2 кнопки
                flag2 = flag2 + 3;

                if (flag3 + 3 >= ar.size())
                {
                    flag3 = flag3 + 3;
                    //JOptionPane.showMessageDialog(this, "рецепты кончились");
                    Menu_Next.setEnabled(false);
                } else
                {
                    fill3(flag3 + 3, sqls);//тоже самое для 3 кнопки
                    flag3 = flag3 + 3;
                }

            }
        }
    }
 private void Next_added(String sqls)//Метод для "Далее" добавленных рецептов
    {
        Menu_Back.setEnabled(true);

        LabelRec1.setText("");
        ButRecept1.setText("");
        ButRecept1.setIcon(null);
        LabelRec2.setText("");
        ButRecept2.setText("");
        ButRecept2.setIcon(null);
        LabelRec3.setText("");
        ButRecept3.setText("");
        ButRecept3.setIcon(null);
        ar = Nuranew.getIDS(sqls);
        if (flag1 + 3 >= ar.size())
        {
            flag1 = flag1 + 3;
            flag2 = flag2 + 3;
            flag3 = flag3 + 3;
            //JOptionPane.showMessageDialog(this, "рецепты кончились");
            Menu_Next.setEnabled(false);
        } else
        {

            id = ar.get(flag1 + 3);
            String text = Nuranew.get_added_info(id);
            ButRecept1.setText(text);
            flag1 = flag1 + 3;
            if (flag2 + 3 >= ar.size())
            {
                flag2 = flag2 + 3;
                flag3 = flag3 + 3;
                //JOptionPane.showMessageDialog(this, "рецепты кончились");
                Menu_Next.setEnabled(false);
            } else
            {
                id = ar.get(flag2 + 3);
                text = Nuranew.get_added_info(id);
                ButRecept2.setText(text);
                flag2 = flag2 + 3;

                if (flag3 + 3 >= ar.size())
                {
                    flag3 = flag3 + 3;
                    //JOptionPane.showMessageDialog(this, "рецепты кончились");
                    Menu_Next.setEnabled(false);
                } else
                {
                    id = ar.get(flag3 + 3);
                    text = Nuranew.get_added_info(id);
                    ButRecept3.setText(text);
                    flag3 = flag3 + 3;
                }

            }
        }
    }

    
    private void Back(String sqls)//кнопка "Назад"
    {
        System.out.println(flag1);
        Menu_Next.setEnabled(true);
        //очищаем все
        LabelRec1.setText("");
        ButRecept1.setIcon(null);
        LabelRec2.setText("");
        ButRecept2.setIcon(null);
        LabelRec3.setText("");
        ButRecept3.setIcon(null);
        //происходит обратное заполнение кнопок 
        fill1(flag1 - 3, sqls);
        flag1 = flag1 - 3;
        fill2(flag2 - 3, sqls);
        flag2 = flag2 - 3;
        fill3(flag3 - 3, sqls);
        flag3 = flag3 - 3;

        if (flag1 == 0) //блокирование самой первой кнопки

        {
            Menu_Back.setEnabled(false);
        }

    }
private void Back_added(String sqls)//кнопка "Назад" для добавленных рецептов
    {
        ar = Nuranew.getIDS(sqls);
        Menu_Next.setEnabled(true);

        LabelRec1.setText("");
        ButRecept1.setText("");
        ButRecept1.setIcon(null);
        LabelRec2.setText("");
        ButRecept2.setText("");
        ButRecept2.setIcon(null);
        LabelRec3.setText("");
        ButRecept3.setText("");
        ButRecept3.setIcon(null);

        id = ar.get(flag1 - 3);
        String text = Nuranew.get_added_info(id);
        ButRecept1.setText(text);
        flag1 = flag1 - 3;
        id = ar.get(flag2 - 3);
        text = Nuranew.get_added_info(id);
        ButRecept2.setText(text);
        flag2 = flag2 - 3;
        id = ar.get(flag3 - 3);
        text = Nuranew.get_added_info(id);
        ButRecept3.setText(text);
        flag3 = flag3 - 3;

        if (flag1 == 0)
        {
            Menu_Back.setEnabled(false);
        }

    }


    private void ChooseTypeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ChooseTypeActionPerformed
    {//GEN-HEADEREND:event_ChooseTypeActionPerformed
       // этот метод имеет такую же функцию, как и конструктор
       // а именно функцию  заполнения по умолчанию 
        ir = ChooseType.getSelectedIndex();
        System.out.println(ir);

        switch (ir)
            // в зависимости от выбранного элемента Box - предполагается свой запрос 
            //поиска в БД нужных рецептов 
        {
            case 0:

                choose(sqls);
                break;
            case 1:
                sqli = "select pic_id from recept WHERE type_id='b'";
                choose(sqli);
                break;
            case 2:
                sqli = "select pic_id from recept WHERE type_id='d'";
                choose(sqli);
                break;
            case 3:
                sqli = "select pic_id from recept WHERE type_id='s'";
                choose(sqli);
                break;
            case 4:
                sqli = "select pic_id from recept WHERE category_id='CAT2'";
                choose(sqli);
                break;
            case 5:
                sqli = "select pic_id from recept WHERE category_id='CAT3'";
                choose(sqli);
                break;
            case 6:
                sqli = "select pic_id from recept WHERE category_id='CAT4'";
                choose(sqli);
                break;
            case 7:
                sqli = "select pic_id from recept WHERE category_id='CAT5'";
                choose(sqli);
                break;
            case 8:
                sqli = "select pic_id from recept WHERE cui_id='e'";
                choose(sqli);
                break;
            case 9:
                sqli = "select pic_id from recept WHERE cui_id='f'";
                choose(sqli);
                break;
            case 10:
                sqli = "select pic_id from recept WHERE cui_id='r'";
                choose(sqli);
                break;
            case 11:
                sqli = "select pic_id from recept WHERE cui_id='i'";
                choose(sqli);
                break;

            case 12:

                sqli = "select add_id from added_recept";
                choose_add(sqli);
                break;
            case 13:
                sqli = "select pic_id from recept WHERE favourite_n=true";
                choose(sqli);
                break;
            default:
                break;
        }


    }//GEN-LAST:event_ChooseTypeActionPerformed
    private void choose(String sqli)//основной составляющий метод функции заполнения первых 3 кнопок
    {
        ButRecept1.setText("");
        ButRecept2.setText("");
        ButRecept3.setText("");
        LabelRec1.setText("");
        ButRecept1.setIcon(null);
        LabelRec2.setText("");
        ButRecept2.setIcon(null);
        LabelRec3.setText("");
        ButRecept3.setIcon(null);
        Menu_Back.setEnabled(false);

        ar = Nuranew.getIDS(sqli);

        if (ar.size() <= 3)

        {
            Menu_Next.setEnabled(false);
        } else
        {
            Menu_Next.setEnabled(true);
        }
        int i = 0;
        if (i < ar.size())
        {
            flag1 = i;
            fill1(flag1, sqli);
        }
        i++;
        if (i < ar.size())
        {
            flag2 = i;
            fill2(flag2, sqli);
        }
        i++;
        if (i < ar.size())
        {
            flag3 = i;
            fill3(flag3, sqli);
        }

    }

    private void choose_add(String sqli)// заполнения 3 первых кнопок для добавленных рецептов
    {
        LabelRec1.setText("");
        ButRecept1.setIcon(null);
        LabelRec2.setText("");
        ButRecept2.setIcon(null);
        LabelRec3.setText("");
        ButRecept3.setIcon(null);
        ar = Nuranew.getIDS(sqli);
        for (int i = 0; i < ar.size(); i++)
        {
            System.out.println(ar.get(i));
        }
        if (ar.size() <= 3)

        {
            Menu_Next.setEnabled(false);
        }
        int i = 0;
        if (i < ar.size())
        {
            flag1 = i;
            id = ar.get(flag1);
            String text = Nuranew.get_added_info(id);
            ButRecept1.setText(text);

        }
        i++;
        if (i < ar.size())
        {
            flag2 = i;
            id = ar.get(flag2);
            String text = Nuranew.get_added_info(id);
            ButRecept2.setText(text);

        }
        i++;
        if (i < ar.size())
        {
            flag3 = i;
            id = ar.get(flag3);
            String text = Nuranew.get_added_info(id);
            ButRecept3.setText(text);

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MenuFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButMenuExit;
    private javax.swing.JButton ButMenuNew;
    private javax.swing.JButton ButRecept1;
    private javax.swing.JButton ButRecept2;
    private javax.swing.JButton ButRecept3;
    private javax.swing.JComboBox<String> ChooseType;
    private javax.swing.JLabel LabelRec1;
    private javax.swing.JLabel LabelRec2;
    private javax.swing.JLabel LabelRec3;
    private javax.swing.JButton Menu_Back;
    private javax.swing.JButton Menu_Next;
    private javax.swing.JPanel Pane3Recepts;
    private javax.swing.JPanel PaneBackNext;
    private javax.swing.JPanel PaneChoose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
